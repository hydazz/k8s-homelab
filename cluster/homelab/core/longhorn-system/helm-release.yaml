---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: longhorn-system
  namespace: longhorn-system
spec:
  interval: 5m
  install:
    createNamespace: true
  chart:
    spec:
      chart: longhorn
      version: 1.8.1
      interval: 5m
      sourceRef:
        kind: HelmRepository
        name: longhorn-system
        namespace: flux-system
  values:
    enablePSP: false
    defaultSettings:
      defaultDataLocality: best-effort
      orphanAutoDeletion: true
    ingress:
      enabled: true
      host: longhorn.k8s.hyde.services
      ingressClassName: internal-nginx
      tls: true
      tlsSecret: wildcard.hyde.services
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/description: Block Storage For Kubernetes
        gethomepage.dev/group: Infrastructure Management
        gethomepage.dev/icon: longhorn
        gethomepage.dev/name: Longhorn
        gethomepage.dev/namespace: longhorn-system
        gethomepage.dev/app: longhorn
        # authentication
        nginx.ingress.kubernetes.io/auth-url: |-
          http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
        nginx.ingress.kubernetes.io/auth-signin: |-
          https://longhorn.k8s.hyde.services/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
        nginx.ingress.kubernetes.io/auth-response-headers: |-
          Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid
        nginx.ingress.kubernetes.io/auth-snippet: |
          proxy_set_header X-Forwarded-Host $http_host;
    longhornUI:
      replicas: 1
      nodeSelector:
        kubernetes.io/hostname: "nebula"
    global:
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
