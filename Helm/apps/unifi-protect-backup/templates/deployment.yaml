{{- with .Values.unifiprotectbackup }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: unifi-protect-backup
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/instance: unifi-protect-backup
    app.kubernetes.io/name: unifi-protect-backup
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: unifi-protect-backup
      app.kubernetes.io/name: unifi-protect-backup
  template:
    metadata:
      annotations:
        backup.velero.io/backup-volumes: appdata
      labels:
        app.kubernetes.io/instance: unifi-protect-backup
        app.kubernetes.io/name: unifi-protect-backup
    spec:
      containers:
        - name: unifi-protect-backup
          image: {{ .image }}
          imagePullPolicy: IfNotPresent
          env:
            - name: PUID
              value: "1001"
            - name: PGID
              value: "1001"
            - name: TZ
              value: "Australia/Melbourne"
            - name: PURGE_INTERVAL
              value: "1d"
            - name: FILE_STRUCTURE_FORMAT
              value: "{camera_name}/{event.start:%d-%m-%Y}/{event.end:%I-%M-%S%p} {detection_type}.mp4"
            - name: DETECTION_TYPES
              value: "person,vehicle,ring"
            - name: SKIP_MISSING
              value: "false"
            - name: RCLONE_RETENTION
              value: "1d"
            - name: RCLONE_DESTINATION
              value: "cloudflare:/unifi-protect"
            - name: UFP_SSL_VERIFY
              value: "false"
            - name: UFP_ADDRESS
              value: "192.168.4.1"
            - name: UFP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: unifi-protect-credentials
                  key: UFP_USERNAME
            - name: UFP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: unifi-protect-credentials
                  key: UFP_PASSWORD
          resources:
{{ toYaml .resources | indent 12 }}
          volumeMounts:
            - name: appdata
              mountPath: /config

      restartPolicy: Always
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      nodeSelector:
{{ toYaml .nodeSelector | indent 8 }}
      volumes:
        - name: appdata
          persistentVolumeClaim:
            claimName: unifi-protect-backup-appdata-pvc
{{- end }}
